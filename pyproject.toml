[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rik-screener"
version = "1.2.2"
authors = [
    {name = "kalqvam", email = "ennor.finance@gmail.com"},
]
description = "A Python package for screening Estonian companies using RIK data"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["finance", "estonia", "business", "screening", "rik", "company-analysis"]
dependencies = [
    "pandas>=1.3.0",
    "numpy>=1.20.0",
]

[project.optional-dependencies]
colab = [
    "google-colab",
]
dev = [
    "pytest>=6.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.950",
    "pre-commit>=2.15.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=3.0",
    "pytest-mock>=3.6",
]

[project.urls]
Homepage = "https://github.com/kalqvam/rik_screener_tool"
Documentation = "https://github.com/kalqvam/rik_screener_tool#readme"
Repository = "https://github.com/kalqvam/rik_screener_tool.git"
Issues = "https://github.com/kalqvam/rik_screener_tool/issues"

[project.scripts]
rik-screener = "rik_screener.call:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["rik_screener*"]
exclude = ["tests*", "*.tests", "*.tests.*", "tests.*"]

[tool.setuptools.package-data]
rik_screener = ["*.json", "*.csv"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["rik_screener"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "google.colab.*",
    "ipywidgets.*",
    "IPython.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=rik_screener",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["rik_screener"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "venv/*",
    ".venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
